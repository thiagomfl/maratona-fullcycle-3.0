import { GetStaticProps, GetStaticPaths } from 'next'
import { useRouter } from 'next/dist/client/router'
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import {
  Card,
  Button,
  CardMedia,
  CardHeader,
  Typography,
  CardContent,
  CardActions,
} from '@material-ui/core'
import axios from 'axios'

import { Product } from '../../../models/Product'
import styles from '../../../styles/Home.module.css'

type Props = {
  product: Product
}

const ProductDetailPage = ({ product }: Props) => {
  const router = useRouter()

  if (router.isFallback) {
    return <div> Loading... </div>
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>{product.name} - Detalhes do Produto</title>
        {/* <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <Card>
        <CardHeader 
          title={product.name.toUpperCase()}
          subheader={`R$ ${product.price}`}
        />
        <CardActions>
          <Link 
            href="/produtos/[slug]/order"
            as={`/produtos/${product.slug}/order`}
            passHref
          >
            <Button 
              size="small"
              component="a"
              color="primary"
            >
              Comprar
            </Button>
          </Link>
        </CardActions>
        <CardMedia 
          image={product.image_url}
          style={{ paddingTop: "56%" }}
        />
        <CardContent>
          <Typography 
            component="p"
            variant="body2"
            color="textSecondary"
          >
            {product.description}
          </Typography>
        </CardContent>
      </Card>
    </div>
  )
}

export const getStaticProps: GetStaticProps<Props, {slug: string}> = async (ctx) => {
  const { slug } = ctx.params
  const { data: product } = await http.get(`products/${slug}`)
  
  return {
    props: { product },
    revalidate: 1 * 60 * 2
  }
}

export const getStaticPaths: GetStaticPaths = async (ctx) => {
  try {
    const { data: product } = await http.get(`products`)
    const paths = products.map((product: Product) => ({
      params: { slug: product.slug }
    }))

    return { paths, fallback: 'blocking' }
  } catch (error) {
    if (axios.isAxiosError(error) && error.response.status === 404) {
      return { notFound: true }
      throw error
    }
  }
}

export default ProductDetailPage
